entity ShippingClaim{
 receivedDate ZonedDateTime,
 mailedDate ZonedDateTime,
 createdDate ZonedDateTime,
 updatedDate ZonedDateTime,
 trackingNumber String,
 subject String,
 description String,
 notifyCustomer Boolean,
 missingDocuments Boolean
}

entity ClaimStatus{
 name String
}

entity ContactPreference{
}

entity TicketReason{
}

entity ShippingOrder{
}

entity ClaimAttachment{
 attachmentPath String,
}

entity ClaimMissingDocument{
 documentName String,
 notifyClient Boolean,
 uploaded Boolean,
}

entity ClaimDocumentType{
 name String
}

entity ClaimSolution{
 name String
}

entity ClaimAssignee{
 name String
}

entity ClaimComment{
 header String,
 description String,
 date ZonedDateTime,
 commentBy String
}

entity Currency{
 name String
}

entity ClaimCarrierRefund{
 carrierClaim String,
 amount Double,
 chequeNumber String,
 cheque String,
 date ZonedDateTime
}

entity User1{
}

entity ClaimCarrierRefundStatus{
 status String
}
entity ClaimEshipperRefund{
 amount Double,
 cheque String,
 date ZonedDateTime
}

entity ElasticShippingClaim{

}

entity ElasticsearchStatus{

}

relationship OneToOne{
 ShippingClaim{claimCarrierRefund} to  ClaimCarrierRefund,
 ShippingClaim{claimEshipperRefund} to  ClaimEshipperRefund,
 ElasticShippingClaim{shippingClaim} to ShippingClaim,
 ContactPreference{user} to User

}

 relationship OneToMany{
 ClaimDocumentType to ClaimMissingDocument{claimDocumentType},
 ShippingClaim to ClaimAttachment{shippingClaim},
 ShippingOrder to ShippingClaim{shippingOrder},
 TicketReason to ShippingClaim{ticketReason},
 ClaimStatus to ShippingClaim{claimStatus},
 ShippingClaim to ClaimMissingDocument{shippingClaim},
 ClaimSolution to  ShippingClaim{claimSolution},
 ClaimAssignee to ShippingClaim{claimAssignee},
 ClaimComment to ShippingClaim{claimComment},
 Currency to ClaimCarrierRefund{currency},
 ClaimCarrierRefundStatus to ClaimCarrierRefund{refundStatus},
 Currency to ClaimEshipperRefund{currency},
 ElasticsearchStatus to ElasticShippingClaim{elasticStatus},
 User1 to ClaimComment{user1},
 ContactPreference to ShippingClaim{contactPreference}
 }


service all with serviceImpl

paginate ShippingClaim with pagination
dto * with mapstruct